{"version":3,"sources":["dbhelper.js","restaurant_info.js"],"names":["offlineMessage","document","getElementById","noDataMessage","dataSavedMessage","saveErrorMessage","DBHelper","id","1","2","3","4","5","6","7","8","9","10","lastUpdated","this","getLastUpdated","textContent","style","display","localStorage","getItem","date","setItem","result","console","log","error","response","ok","Error","statusText","json","pathToResource","fetch","then","validateResponse","readResponseAsJSON","restaurant","imageType","width","fileExtension","map","google","maps","Marker","position","latlng","title","name","url","getRestaurantURL","animation","Animation","DROP","elementBreadcrumb","elementCardPrimary","elementRestaurantName","elementRestaurantAddress","elementRestaurantCuisine","elementRestaurantHours","elementGoogleMap","elementReviewsContainer","elementReviewsList","window","initMap","getParameterByName","loadRestaurantNetworkFirst","endpointRestaurantById","getServerData","dataFromNetwork","self","updateRestaurantUI","createBreadcrumb","saveRestaurantsDataLocally","setLastUpdated","Date","catch","err","warn","createGoogleMaps","getLocalRestaurantByIdData","offlineData","Map","center","lat","lng","zoom","addMarkerForRestaurant","addListener","querySelector","setAttribute","picture","createResponsivePicture","parentNode","insertBefore","innerHTML","tabIndex","address","cuisine_type","operating_hours","updateRestaurantHoursUI","updateReviewsUI","operatingHours","key","row","createElement","className","day","appendChild","time","reviews","arguments","length","undefined","noReviews","forEach","review","createReviewHTML","li","divCardPrimary","divCardActions","rating","append","divCardSecondary","comments","location","href","replace","results","RegExp","exec","decodeURIComponent","sizes","srcsetWebP","getImageUrlForRestaurant","srcsetJPEG","sourceWebP","srcset","type","sourceDefault","defaultImg","imageSrc","src","altText","getAlternativeText","alt"],"mappings":"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","file":"resto-bundle.min.js","sourcesContent":["const offlineMessage = document.getElementById('offline');\r\nconst noDataMessage = document.getElementById('no-data');\r\nconst dataSavedMessage = document.getElementById('data-saved');\r\nconst saveErrorMessage = document.getElementById('save-error');\r\n\r\n\r\n/**\r\n * DBHelper provides functions to interact with the local development API server\r\n * provided by Udacity for project 2.\r\n */\r\n\r\nclass DBHelper {\r\n\r\n  /**\r\n   * Alternative Text as the API server doesn't provide it.\r\n   */\r\n  static getAlternativeText(id) {\r\n    const altTexts = {\r\n      1: \"Interior of Mission Chinese Food\",\r\n      2: \"Pizza Quattro Formaggi\",\r\n      3: \"Interior of Kang Ho Dong Baekjeong\",\r\n      4: \"Outside view of Katz's Delicatessen at night\",\r\n      5: \"Open kitchen of Roberta's Pizza\",\r\n      6: \"People queueing at Hometown BBQ\",\r\n      7: \"Outside view of Superiority Burger\",\r\n      8: \"Outside view of The Dutch\",\r\n      9: \"People eating at Mu Ramen\",\r\n      10: \"Interior of Casa Enrique\"\r\n    };\r\n    return altTexts[id];\r\n  }\r\n\r\n  static messageOffline() {\r\n    const lastUpdated = this.getLastUpdated();\r\n    if (lastUpdated) {\r\n     offlineMessage.textContent += ' Last fetched server data: ' + lastUpdated;\r\n    }\r\n    offlineMessage.style.display = 'block';\r\n  }\r\n\r\n  static messageNoData() {\r\n    //\r\n    noDataMessage.style.display = 'block';\r\n  }\r\n\r\n  static messageDataSaved() {\r\n    const lastUpdated = this.getLastUpdated();\r\n    if (lastUpdated) {dataSavedMessage.textContent += ' on ' + lastUpdated;}\r\n    dataSavedMessage.style.display = 'block';\r\n  }\r\n\r\n  static messageSaveError() {\r\n    saveErrorMessage.style.display = 'block';\r\n  }\r\n\r\n  // Util network function.\r\n  static getLastUpdated() {\r\n    return localStorage.getItem('lastUpdated');\r\n  }\r\n\r\n  // Util network function.\r\n  static setLastUpdated(date) {\r\n    localStorage.setItem('lastUpdated', date);\r\n  }\r\n\r\n  static logResult(result) {\r\n    console.log(result);\r\n  }\r\n\r\n  static logError(error) {\r\n    console.log('[ERROR] Looks like there was a problem: \\n', error);\r\n  }\r\n\r\n  static validateResponse(response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  static readResponseAsJSON(response) {\r\n    return response.json();\r\n  }\r\n\r\n  static get DATABASE_URL() {\r\n    const port = 1337;\r\n    return `http://localhost:${port}`;\r\n  }\r\n\r\n  /**\r\n   * getServerData\r\n   */\r\n  static getServerData(pathToResource) {\r\n    return fetch(pathToResource)\r\n      .then(this.validateResponse)\r\n      .then(this.readResponseAsJSON)\r\n\r\n  }\r\n\r\n  \r\n  static getRestaurantURL(restaurant) {\r\n    return `restaurant.html?id=${restaurant.id}`\r\n  }\r\n\r\n  static getImageUrlForRestaurant(restaurant, imageType, width) {\r\n    // Default image type is jpeg.\r\n    let fileExtension = 'jpg';\r\n    switch (imageType) {\r\n      case 'jpeg':\r\n        break;\r\n      case 'webp':\r\n        fileExtension = 'webp';\r\n        break;\r\n      default:\r\n        console.log(`[DEBUG] unhandled imageType: ${imageType}`);\r\n    }\r\n    if (typeof width !== 'undefined') {\r\n      return `img/${restaurant.id}_w_${width}.${fileExtension}`;\r\n    } else {\r\n      return `img/${restaurant.id}_w_800.${fileExtension}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a Google Maps marker for a restaurant.\r\n   */\r\n  static addMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.getRestaurantURL(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP}\r\n    );\r\n    return marker;\r\n  }\r\n\r\n}\r\n","let map;\r\nlet restaurant;\r\n\r\nconst elementBreadcrumb = document.getElementById('breadcrumb');\r\nconst elementCardPrimary = document.getElementById('card-primary');\r\nconst elementRestaurantName = document.getElementById('restaurant-name');\r\nconst elementRestaurantAddress = document.getElementById('restaurant-address');\r\nconst elementRestaurantCuisine = document.getElementById('restaurant-cuisine');\r\nconst elementRestaurantHours = document.getElementById('restaurant-hours');\r\nconst elementGoogleMap = document.getElementById('map');\r\nconst elementReviewsContainer = document.getElementById('reviews-container');\r\nconst elementReviewsList = document.getElementById('reviews-list');\r\n\r\nwindow.initMap = () => {\r\n  const id = getParameterByName('id');\r\n  loadRestaurantNetworkFirst(id);\r\n}\r\n\r\nconst loadRestaurantNetworkFirst = (id) => {\r\n  const endpointRestaurantById = `http://localhost:1337/restaurants/${id}`;\r\n  DBHelper.getServerData(endpointRestaurantById)\r\n  .then(dataFromNetwork => {\r\n    self.restaurant = dataFromNetwork;\r\n    updateRestaurantUI();\r\n    createBreadcrumb();\r\n    saveRestaurantsDataLocally(dataFromNetwork)\r\n    .then(() => {\r\n      DBHelper.setLastUpdated(new Date());\r\n    }).catch(err => {\r\n      console.warn(err);\r\n    });\r\n    createGoogleMaps();\r\n  }).catch(err => {\r\n    console.log('[DEBUG] Network requests have failed, this is expected if offline');\r\n    getLocalRestaurantByIdData(id)\r\n    .then(offlineData => {\r\n      self.restaurant = offlineData;\r\n      updateRestaurantUI();\r\n      createBreadcrumb();\r\n      createGoogleMaps();\r\n    }).catch(err => {\r\n      console.warn(err);\r\n    });\r\n  });\r\n}\r\n\r\nconst createGoogleMaps = () => {\r\n  let loc = {lat: 40.722216, lng: -73.987501};\r\n  map = new google.maps.Map(elementGoogleMap, {\r\n    center: loc,\r\n    zoom: 12\r\n  });\r\n  DBHelper.addMarkerForRestaurant(self.restaurant, self.map);\r\n  let setTitle = () => {\r\n    const iFrameGoogleMaps = document.querySelector('#map iframe');\r\n    iFrameGoogleMaps.setAttribute('title', 'Google Maps overview of restaurants');\r\n  }\r\n  map.addListener('tilesloaded', setTitle);\r\n};\r\n\r\nconst updateRestaurantUI = () => {\r\n  const picture = createResponsivePicture(self.restaurant);\r\n  const parentElement = elementCardPrimary.parentNode;\r\n  parentElement.insertBefore(picture, elementCardPrimary);\r\n\r\n  elementRestaurantName.innerHTML = self.restaurant.name;\r\n  elementRestaurantName.tabIndex = '0';\r\n\r\n  elementRestaurantAddress.innerHTML = self.restaurant.address;\r\n\r\n  elementRestaurantCuisine.innerHTML = self.restaurant.cuisine_type;\r\n\r\n  if (restaurant.operating_hours) {\r\n    updateRestaurantHoursUI();\r\n  }\r\n  updateReviewsUI();\r\n}\r\n\r\nconst updateRestaurantHoursUI = () => {\r\n  let operatingHours = self.restaurant.operating_hours;\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n    row.className = 'restaurant-card-table-content';\r\n    row.tabIndex = '0';\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    elementRestaurantHours.appendChild(row);\r\n  }\r\n}\r\n\r\nconst updateReviewsUI = (reviews = self.restaurant.reviews) => {\r\n  const title = document.createElement('h3');\r\n  title.className = 'reviews-title';\r\n  title.innerHTML = 'Reviews';\r\n  elementReviewsContainer.appendChild(title);\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    elementReviewsContainer.appendChild(noReviews);\r\n    return;\r\n  }\r\n\r\n  reviews.forEach(review => {\r\n    elementReviewsList.appendChild(createReviewHTML(review));\r\n  });\r\n  elementReviewsContainer.appendChild(elementReviewsList);\r\n}\r\n\r\nconst createReviewHTML = (review) => {\r\n  const li = document.createElement('li');\r\n  li.className = 'review-card';\r\n\r\n  const divCardPrimary = document.createElement('div');\r\n  divCardPrimary.className = 'card-primary';\r\n  const name = document.createElement('h2');\r\n  name.className = 'card-title';\r\n  name.innerHTML = review.name;\r\n  divCardPrimary.appendChild(name);\r\n  const date = document.createElement('h3');\r\n  date.className = 'card-subtitle';\r\n  date.innerHTML = review.date;\r\n  divCardPrimary.appendChild(date);\r\n  li.appendChild(divCardPrimary);\r\n\r\n  const divCardActions = document.createElement('div');\r\n  divCardActions.className = 'review-card-rating';\r\n  const rating = document.createElement('p');\r\n  rating.className = 'review-card-rating-content';\r\n  rating.innerHTML = `Rating: ${review.rating}`;\r\n  divCardActions.append(rating);\r\n  li.appendChild(divCardActions);\r\n\r\n  const divCardSecondary = document.createElement('div');\r\n  divCardSecondary.className = 'card-secondary';\r\n  const comments = document.createElement('p');\r\n  comments.className = 'card-secondary-content';\r\n  comments.innerHTML = review.comments;\r\n  divCardSecondary.appendChild(comments);\r\n  li.appendChild(divCardSecondary);\r\n\r\n  return li;\r\n}\r\n\r\nconst createBreadcrumb = (restaurant=self.restaurant) => {\r\n  const li = document.createElement('li');\r\n  li.className = 'breadcrumb';\r\n  li.innerHTML = restaurant.name;\r\n  li.setAttribute('aria-current', 'page');\r\n  elementBreadcrumb.appendChild(li);\r\n}\r\n\r\nconst getParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nconst createResponsivePicture = (restaurant) => {\r\n  const picture = document.createElement('picture');\r\n\r\n  const sizes = '(max-width: 37.4375rem) 100vw, (min-width: 37.5rem) 50vw, 100vw';\r\n\r\n  const srcsetWebP =\r\n    `${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 300)} 300w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 433)} 433w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 552)} 552w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 653)} 653w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 752)} 752w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'webp', 800)} 800w`;\r\n\r\n  const srcsetJPEG =\r\n    `${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 300)} 300w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 433)} 433w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 552)} 552w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 653)} 653w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 752)} 752w,\r\n    ${DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 800)} 800w`;\r\n\r\n  const sourceWebP = document.createElement('source');\r\n  sourceWebP.srcset = srcsetWebP;\r\n  sourceWebP.sizes = sizes;\r\n  sourceWebP.type = 'image/webp';\r\n  picture.appendChild(sourceWebP);\r\n\r\n  const sourceDefault = document.createElement('source');\r\n  sourceDefault.srcset = srcsetJPEG;\r\n  sourceDefault.sizes = sizes;\r\n  sourceDefault.type = 'image/jpeg';\r\n  picture.appendChild(sourceDefault);\r\n\r\n  const defaultImg = document.createElement('img');\r\n  const imageSrc = DBHelper.getImageUrlForRestaurant(restaurant, 'jpeg', 800);\r\n  defaultImg.src = imageSrc;\r\n\r\n  let altText = DBHelper.getAlternativeText(restaurant.id);\r\n  if (!altText) {\r\n    altText = `Restaurant ${restaurant.name}`;\r\n  }\r\n  defaultImg.alt = altText;\r\n  defaultImg.tabIndex = '0';\r\n  picture.appendChild(defaultImg);\r\n\r\n  return picture;\r\n}\r\n"],"sourceRoot":"/source/"}